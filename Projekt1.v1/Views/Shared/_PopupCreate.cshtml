@model Projekt1.v1.Models.Car
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/kendo/css")
<link rel="stylesheet" href="http://kendo.cdn.telerik.com/<2013.2.918>/styles/kendo.common-bootstrap.min.css" />
<link rel="stylesheet" href="http://kendo.cdn.telerik.com/<2013.2.918>/styles/kendo.bootstrap.min.css" />
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
<script src="http://kendo.cdn.telerik.com/<2013.2.918>/js/kendo.all.min.js"></script>
<script src="http://kendo.cdn.telerik.com/<2013.2.918>/js/kendo.aspnetmvc.min.js"></script>
@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/bundles/jqueryval")

@Scripts.Render("~/Scripts/FixValidation.js")











@using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "result" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <center>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div id="result">
                <div class="form-group">
                    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       @Html.Kendo().DatePickerFor(model => model.ReleaseDate)
                        @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BodyTypeId, "BodyTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BodyTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BodyTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       @Html.Kendo().DatePickerFor(model => model.AddDate)
                        @Html.ValidationMessageFor(model => model.AddDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Kendo().DatePickerFor(model => model.ModifiedDate)
                        @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>

        </center>

    </div>

}


<button id="my-button" class="k-button">Close</button>

<div>
    <center>
        <input type="button" value="Close" class="btn btn-default" onclick="formSubmit()" />
    </center>
</div>
<script type="text/Javascript">
            function formSubmit() {
                var win = window.parent.$("#Create").data("kendoWindow");
                win.close();
            }
</script>

